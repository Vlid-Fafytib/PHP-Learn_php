gettype($variable); - получить тип данных переменной. Возвращает стринг с названием.
echo - вывести что либо 
ассоциативные массивы в php: элемент => значение
isset(переменная); проверка на то создана ли в данный момент такая переменная.
unset(какой либо элемент); удалить из памяти переменную, программа будет работать как будто её и не было
Предопределенные константы:
PHP_OS - Содержит имя операциооной системы на которой содержится PHP 
PHP_VERSION - Содержит версию PHP
__FUNCTION__ - Содержит название текущей функции 
__CLASS__ - Содержит название текущего класса 
__LINE__ - Содержит текущий номер строки выполняемого кода
__FILE__ - Содержит имя файла, в котором запущен текущий код

define ("имя константы", значение константы); - Создание новой константы
defined(имя константы); - Проверяет на наличие такой константы, Возвращает правду если она существует. Имя должно быть в кавычках 
mt_rand(первое число, второе число); - генерирует случайное чилсо в диапазоне между первым и вторым числом
constant(); - Обратиться к константе с динамическим именем
a ** b; возведение в степень числа а в степень в
если строка помещена в обратные кавычки (``) то строка является командой windows и может выполнить какое то действие за пределами браузера
$string[n]; возвращает символ по индексу в строке (ГЕНИАЛЬНО!)
a.b - слияние (конкатинация) строк.
строка .= сктрока; прибавить к строке другую строку. (аналог +=)
decbin(); перевести число в двоинчую систему
bindec(); перевести число из двоичной системы числения в десятеричную
$arr = [3, 1, 7, 6, 9, 22];
usort($arr, function($a, $b) { return $a <=> $b; });
for ($i=0; $i < 6; $i++)
echo $arr[$i]; - - - Сортировка массива посредсвом оператора <=>
если перед выполняемым кодом написать символ @, то ошибки которые могут быть, не будут выведены в браузер
сочитанием символов ?: можно проверить сужествует ли заданый элемент, был ли он создан до этого или нет
?? вовращает операнд который не равен null принимает сколько угодно 



